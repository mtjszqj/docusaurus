"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[93422],{35141:(e,t,n)=>{n.d(t,{M:()=>d});var r=n(31454),i=n(86847),a=n(23480);function d(e){var t={options:{directed:e.isDirected(),multigraph:e.isMultigraph(),compound:e.isCompound()},nodes:a.A(e.nodes(),function(t){var n=e.node(t),i=e.parent(t),a={v:t};return r.A(n)||(a.value=n),r.A(i)||(a.parent=i),a}),edges:a.A(e.edges(),function(t){var n=e.edge(t),i={v:t.v,w:t.w};return r.A(t.name)||(i.name=t.name),r.A(n)||(i.value=n),i})};return r.A(e.graph())||(t.value=i.A(e.graph())),t}n(3735)},86847:(e,t,n)=>{n.d(t,{A:()=>i});var r=n(34081);let i=function(e){return(0,r.A)(e,4)}},93422:(e,t,n)=>{n.r(t),n.d(t,{render:()=>C});var r=n(93510),i=n(16470);n(27923),n(67027);var a=n(72912),d=n(62628),o=n(35141),s=n(62499),l=new Map,g=new Map,c=new Map,f=(0,a.K2)(()=>{g.clear(),c.clear(),l.clear()},"clear"),h=(0,a.K2)((e,t)=>{let n=g.get(t)||[];return a.Rm.trace("In isDescendant",t," ",e," = ",n.includes(e)),n.includes(e)},"isDescendant"),u=(0,a.K2)((e,t)=>{let n=g.get(t)||[];return a.Rm.info("Descendants of ",t," is ",n),a.Rm.info("Edge is ",e),e.v!==t&&e.w!==t&&(n?n.includes(e.v)||h(e.v,t)||h(e.w,t)||n.includes(e.w):(a.Rm.debug("Tilt, ",t,",not in descendants"),!1))},"edgeInCluster"),p=(0,a.K2)((e,t,n,r)=>{a.Rm.warn("Copying children of ",e,"root",r,"data",t.node(e),r);let i=t.children(e)||[];e!==r&&i.push(e),a.Rm.warn("Copying (nodes) clusterId",e,"nodes",i),i.forEach(i=>{if(t.children(i).length>0)p(i,t,n,r);else{let d=t.node(i);a.Rm.info("cp ",i," to ",r," with parent ",e),n.setNode(i,d),r!==t.parent(i)&&(a.Rm.warn("Setting parent",i,t.parent(i)),n.setParent(i,t.parent(i))),e!==r&&i!==e?(a.Rm.debug("Setting parent",i,e),n.setParent(i,e)):(a.Rm.info("In copy ",e,"root",r,"data",t.node(e),r),a.Rm.debug("Not Setting parent for node=",i,"cluster!==rootId",e!==r,"node!==clusterId",i!==e));let o=t.edges(i);a.Rm.debug("Copying Edges",o),o.forEach(i=>{a.Rm.info("Edge",i);let d=t.edge(i.v,i.w,i.name);a.Rm.info("Edge data",d,r);try{u(i,r)?(a.Rm.info("Copying as ",i.v,i.w,d,i.name),n.setEdge(i.v,i.w,d,i.name),a.Rm.info("newGraph edges ",n.edges(),n.edge(n.edges()[0]))):a.Rm.info("Skipping copy of edge ",i.v,"-->",i.w," rootId: ",r," clusterId:",e)}catch(e){a.Rm.error(e)}})}a.Rm.debug("Removing node",i),t.removeNode(i)})},"copy"),m=(0,a.K2)((e,t)=>{let n=t.children(e),r=[...n];for(let i of n)c.set(i,e),r=[...r,...m(i,t)];return r},"extractDescendants"),w=(0,a.K2)((e,t,n)=>{let r=e.edges().filter(e=>e.v===t||e.w===t),i=e.edges().filter(e=>e.v===n||e.w===n),a=r.map(e=>({v:e.v===t?n:e.v,w:e.w===t?t:e.w})),d=i.map(e=>({v:e.v,w:e.w}));return a.filter(e=>d.some(t=>e.v===t.v&&e.w===t.w))},"findCommonEdges"),R=(0,a.K2)((e,t,n)=>{let r;let i=t.children(e);if(a.Rm.trace("Searching children of id ",e,i),i.length<1)return e;for(let e of i){let i=R(e,t,n),a=w(t,n,i);if(i){if(!(a.length>0))return i;r=i}}return r},"findNonClusterChild"),v=(0,a.K2)(e=>l.has(e)&&l.get(e).externalConnections&&l.has(e)?l.get(e).id:e,"getAnchorId"),y=(0,a.K2)((e,t)=>{if(!e||t>10){a.Rm.debug("Opting out, no graph ");return}for(let t of(a.Rm.debug("Opting in, graph "),e.nodes().forEach(function(t){e.children(t).length>0&&(a.Rm.warn("Cluster identified",t," Replacement id in edges: ",R(t,e,t)),g.set(t,m(t,e)),l.set(t,{id:R(t,e,t),clusterData:e.node(t)}))}),e.nodes().forEach(function(t){let n=e.children(t),r=e.edges();n.length>0?(a.Rm.debug("Cluster identified",t,g),r.forEach(e=>{h(e.v,t)^h(e.w,t)&&(a.Rm.warn("Edge: ",e," leaves cluster ",t),a.Rm.warn("Descendants of XXX ",t,": ",g.get(t)),l.get(t).externalConnections=!0)})):a.Rm.debug("Not a cluster ",t,g)}),l.keys())){let n=l.get(t).id,r=e.parent(n);r!==t&&l.has(r)&&!l.get(r).externalConnections&&(l.get(t).id=r)}e.edges().forEach(function(t){let n=e.edge(t);a.Rm.warn("Edge "+t.v+" -> "+t.w+": "+JSON.stringify(t)),a.Rm.warn("Edge "+t.v+" -> "+t.w+": "+JSON.stringify(e.edge(t)));let r=t.v,i=t.w;if(a.Rm.warn("Fix XXX",l,"ids:",t.v,t.w,"Translating: ",l.get(t.v)," --- ",l.get(t.w)),l.get(t.v)||l.get(t.w)){if(a.Rm.warn("Fixing and trying - removing XXX",t.v,t.w,t.name),r=v(t.v),i=v(t.w),e.removeEdge(t.v,t.w,t.name),r!==t.v){let i=e.parent(r);l.get(i).externalConnections=!0,n.fromCluster=t.v}if(i!==t.w){let r=e.parent(i);l.get(r).externalConnections=!0,n.toCluster=t.w}a.Rm.warn("Fix Replacing with XXX",r,i,t.name),e.setEdge(r,i,n,t.name)}}),a.Rm.warn("Adjusted Graph",o.M(e)),X(e,0),a.Rm.trace(l)},"adjustClustersAndEdges"),X=(0,a.K2)((e,t)=>{if(a.Rm.warn("extractor - ",t,o.M(e),e.children("D")),t>10){a.Rm.error("Bailing out");return}let n=e.nodes(),r=!1;for(let t of n){let n=e.children(t);r=r||n.length>0}if(!r){a.Rm.debug("Done, no node has children",e.nodes());return}for(let r of(a.Rm.debug("Nodes = ",n,t),n))if(a.Rm.debug("Extracting node",r,l,l.has(r)&&!l.get(r).externalConnections,!e.parent(r),e.node(r),e.children("D")," Depth ",t),l.has(r)){if(!l.get(r).externalConnections&&e.children(r)&&e.children(r).length>0){a.Rm.warn("Cluster without external connections, without a parent and with children",r,t);let n="TB"===e.graph().rankdir?"LR":"TB";l.get(r)?.clusterData?.dir&&(n=l.get(r).clusterData.dir,a.Rm.warn("Fixing dir",l.get(r).clusterData.dir,n));let i=new s.T({multigraph:!0,compound:!0}).setGraph({rankdir:n,nodesep:50,ranksep:50,marginx:8,marginy:8}).setDefaultEdgeLabel(function(){return{}});a.Rm.warn("Old graph before copy",o.M(e)),p(r,e,i,r),e.setNode(r,{clusterNode:!0,id:r,clusterData:l.get(r).clusterData,label:l.get(r).label,graph:i}),a.Rm.warn("New graph after copy node: (",r,")",o.M(i)),a.Rm.debug("Old graph after copy",o.M(e))}else a.Rm.warn("Cluster ** ",r," **not meeting the criteria !externalConnections:",!l.get(r).externalConnections," no parent: ",!e.parent(r)," children ",e.children(r)&&e.children(r).length>0,e.children("D"),t),a.Rm.debug(l)}else a.Rm.debug("Not a cluster",r,t);for(let r of(n=e.nodes(),a.Rm.warn("New list of nodes",n),n)){let n=e.node(r);a.Rm.warn(" Now next level",r,n),n?.clusterNode&&X(n.graph,t+1)}},"extractor"),b=(0,a.K2)((e,t)=>{if(0===t.length)return[];let n=Object.assign([],t);return t.forEach(t=>{let r=e.children(t),i=b(e,r);n=[...n,...i]}),n},"sorter"),E=(0,a.K2)(e=>b(e,e.children()),"sortNodesByHierarchy"),N=(0,a.K2)(async(e,t,n,s,g,c)=>{a.Rm.warn("Graph in recursive render:XAX",o.M(t),g);let f=t.graph().rankdir;a.Rm.trace("Dir in recursive render - dir:",f);let h=e.insert("g").attr("class","root");t.nodes()?a.Rm.info("Recursive render XXX",t.nodes()):a.Rm.info("No nodes found for",t),t.edges().length>0&&a.Rm.info("Recursive edges",t.edge(t.edges()[0]));let u=h.insert("g").attr("class","clusters"),p=h.insert("g").attr("class","edgePaths"),m=h.insert("g").attr("class","edgeLabels"),w=h.insert("g").attr("class","nodes");await Promise.all(t.nodes().map(async function(e){let i=t.node(e);if(void 0!==g){let n=JSON.parse(JSON.stringify(g.clusterData));a.Rm.trace("Setting data for parent cluster XXX\n Node.id = ",e,"\n data=",n.height,"\nParent cluster",g.height),t.setNode(g.id,n),t.parent(e)||(a.Rm.trace("Setting parent",e,g.id),t.setParent(e,g.id,n))}if(a.Rm.info("(Insert) Node XXX"+e+": "+JSON.stringify(t.node(e))),i?.clusterNode){a.Rm.info("Cluster identified XBX",e,i.width,t.node(e));let{ranksep:d,nodesep:o}=t.graph();i.graph.setGraph({...i.graph.graph(),ranksep:d+25,nodesep:o});let l=await N(w,i.graph,n,s,t.node(e),c),g=l.elem;(0,r.lC)(i,g),i.diff=l.diff||0,a.Rm.info("New compound node after recursive render XAX",e,"width",i.width,"height",i.height),(0,r.U7)(g,i)}else t.children(e).length>0?(a.Rm.trace("Cluster - the non recursive path XBX",e,i.id,i,i.width,"Graph:",t),a.Rm.trace(R(i.id,t)),l.set(i.id,{id:R(i.id,t),node:i})):(a.Rm.trace("Node - the non recursive path XAX",e,w,t.node(e),f),await (0,r.on)(w,t.node(e),f))}));let v=(0,a.K2)(async()=>{let e=t.edges().map(async function(e){let n=t.edge(e.v,e.w,e.name);a.Rm.info("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(e)),a.Rm.info("Edge "+e.v+" -> "+e.w+": ",e," ",JSON.stringify(t.edge(e))),a.Rm.info("Fix",l,"ids:",e.v,e.w,"Translating: ",l.get(e.v),l.get(e.w)),await (0,r.jP)(m,n)});await Promise.all(e)},"processEdges");await v(),a.Rm.info("Graph before layout:",JSON.stringify(o.M(t))),a.Rm.info("############################################# XXX"),a.Rm.info("###                Layout                 ### XXX"),a.Rm.info("############################################# XXX"),(0,d.Zp)(t),a.Rm.info("Graph after layout:",JSON.stringify(o.M(t)));let y=0,{subGraphTitleTotalMargin:X}=(0,i.O)(c);return await Promise.all(E(t).map(async function(e){let n=t.node(e);if(a.Rm.info("Position XBX => "+e+": ("+n.x,","+n.y,") width: ",n.width," height: ",n.height),n?.clusterNode)n.y+=X,a.Rm.info("A tainted cluster node XBX1",e,n.id,n.width,n.height,n.x,n.y,t.parent(e)),l.get(n.id).node=n,(0,r.U_)(n);else if(t.children(e).length>0){a.Rm.info("A pure cluster node XBX1",e,n.id,n.x,n.y,n.width,n.height,t.parent(e)),n.height+=X,t.node(n.parentId);let i=n?.padding/2||0,d=n?.labelBBox?.height||0;a.Rm.debug("OffsetY",d-i||0,"labelHeight",d,"halfPadding",i),await (0,r.U)(u,n),l.get(n.id).node=n}else{let e=t.node(n.parentId);n.y+=X/2,a.Rm.info("A regular node XBX1 - using the padding",n.id,"parent",n.parentId,n.width,n.height,n.x,n.y,"offsetY",n.offsetY,"parent",e,e?.offsetY,n),(0,r.U_)(n)}})),t.edges().forEach(function(e){let i=t.edge(e);a.Rm.info("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(i),i),i.points.forEach(e=>e.y+=X/2);let d=t.node(e.v);var o=t.node(e.w);let g=(0,r.Jo)(p,i,l,n,d,o,s);(0,r.T_)(i,g)}),t.nodes().forEach(function(e){let n=t.node(e);a.Rm.info(e,n.type,n.diff),n.isGroup&&(y=n.diff)}),a.Rm.warn("Returning from recursive render XAX",h,y),{elem:h,diff:y}},"recursiveRender"),C=(0,a.K2)(async(e,t)=>{let n=new s.T({multigraph:!0,compound:!0}).setGraph({rankdir:e.direction,nodesep:e.config?.nodeSpacing||e.config?.flowchart?.nodeSpacing||e.nodeSpacing,ranksep:e.config?.rankSpacing||e.config?.flowchart?.rankSpacing||e.rankSpacing,marginx:8,marginy:8}).setDefaultEdgeLabel(function(){return{}}),i=t.select("g");(0,r.g0)(i,e.markers,e.type,e.diagramId),(0,r.nA)(),(0,r.gh)(),(0,r.IU)(),f(),e.nodes.forEach(e=>{n.setNode(e.id,{...e}),e.parentId&&n.setParent(e.id,e.parentId)}),a.Rm.debug("Edges:",e.edges),e.edges.forEach(e=>{if(e.start===e.end){let t=e.start,r=t+"---"+t+"---1",i=t+"---"+t+"---2",a=n.node(t);n.setNode(r,{domId:r,id:r,parentId:a.parentId,labelStyle:"",label:"",padding:0,shape:"labelRect",style:"",width:10,height:10}),n.setParent(r,a.parentId),n.setNode(i,{domId:i,id:i,parentId:a.parentId,labelStyle:"",padding:0,shape:"labelRect",label:"",style:"",width:10,height:10}),n.setParent(i,a.parentId);let d=structuredClone(e),o=structuredClone(e),s=structuredClone(e);d.label="",d.arrowTypeEnd="none",d.id=t+"-cyclic-special-1",o.arrowTypeEnd="none",o.id=t+"-cyclic-special-mid",s.label="",a.isGroup&&(d.fromCluster=t,s.toCluster=t),s.id=t+"-cyclic-special-2",n.setEdge(t,r,d,t+"-cyclic-special-0"),n.setEdge(r,i,o,t+"-cyclic-special-1"),n.setEdge(i,t,s,t+"-cyc<lic-special-2")}else n.setEdge(e.start,e.end,{...e},e.id)}),a.Rm.warn("Graph at first:",JSON.stringify(o.M(n))),y(n),a.Rm.warn("Graph after XAX:",JSON.stringify(o.M(n)));let d=(0,a.D7)();await N(i,n,e.type,e.diagramId,void 0,d)},"render")}}]);